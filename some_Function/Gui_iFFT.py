# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Gui_For_ifft_1.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import os
import javabin
import numpy as np
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QDialog,QShortcut
from matplotlib.figure import Figure
from matplotlib.backends.backend_qt5agg import  FigureCanvasQTAgg as FigureCanvas
from  PyQt5.QtWidgets import  QFileDialog
import matplotlib.pyplot as plt
from matplotlib.widgets import Cursor
from PyQt5.QtGui import QKeySequence
from  PyQt5.QtGui import *
import layers
import Base_Function
import GUI_Function_Part
class Ui_Dialog(QDialog):
    def __init__(self):
        super(Ui_Dialog, self).__init__()
        self.setObjectName("Dialog")
        self.resize(1200, 1200)
        """
        打开文件并且读取，需要备注清楚吗，以后需要更改
        """
        self.layerdata = layers.data_for_single_gui()




        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(4)
        sizePolicy.setVerticalStretch(3)
        sizePolicy.setHeightForWidth(Dialog.sizePolicy().hasHeightForWidth())
        self.setSizePolicy(sizePolicy)
        self.setMinimumSize(QtCore.QSize(800, 800))
        self.setMaximumSize(QtCore.QSize(2000, 2000))
        self.verticalLayout = QtWidgets.QVBoxLayout(self)
        self.verticalLayout.setObjectName("verticalLayout")
        self.widget = QtWidgets.QWidget(self)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.widget.sizePolicy().hasHeightForWidth())
        self.widget.setSizePolicy(sizePolicy)
        self.widget.setMinimumSize(QtCore.QSize(820, 800))
        self.widget.setMaximumSize(QtCore.QSize(2400, 2400))
        self.widget.setObjectName("widget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout_2.setObjectName("verticalLayout_2")

        self.splitter_7 = QtWidgets.QSplitter(self.widget)
        self.splitter_7.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_7.setObjectName("splitter_7")
        self.splitter = QtWidgets.QSplitter(self.splitter_7)
        self.splitter.setMinimumSize(QtCore.QSize(600, 800))
        self.splitter.setMaximumSize(QtCore.QSize(1800, 2404))
        self.splitter.setOrientation(QtCore.Qt.Vertical)
        self.splitter.setObjectName("splitter")


        # self.cm = LinearSegmentedColormap.from_list(self.names+str(1),self.colorlist[self.names+str(1)],N =self.nbins)
        #self.figure = Figure(figsize=(self.width, self.height), dpi=self.dpi, constrained_layout=False)

        #self.canvas = FigureCanvas(self.figure)

        #self.ax = self.figure.add_subplot(111)

        #self.ax.axis('on')

        #self.canvas.draw()
        """
        self.widget_2 = QtWidgets.QWidget(self.splitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(3)
        sizePolicy.setVerticalStretch(2)
        sizePolicy.setHeightForWidth(self.widget_2.sizePolicy().hasHeightForWidth())
        self.widget_2.setSizePolicy(sizePolicy)
        self.widget_2.setMinimumSize(QtCore.QSize(600, 600))
        self.widget_2.setMaximumSize(QtCore.QSize(1800, 1800))
        self.widget_2.setObjectName("widget_2")     
        """

        self.canvas = PlotCanvas()

        self.ax = self.canvas.figure.add_subplot(111)

        self.splitter.addWidget(self.canvas)

        self.widget_3 = QtWidgets.QWidget(self.splitter)

        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(3)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.widget_3.sizePolicy().hasHeightForWidth())
        self.widget_3.setSizePolicy(sizePolicy)
        self.widget_3.setMinimumSize(QtCore.QSize(600, 200))
        self.widget_3.setMaximumSize(QtCore.QSize(1800, 600))
        self.widget_3.setObjectName("widget_3")
        self.splitter_6 = QtWidgets.QSplitter(self.splitter_7)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.splitter_6.sizePolicy().hasHeightForWidth())
        self.splitter_6.setSizePolicy(sizePolicy)
        self.splitter_6.setMinimumSize(QtCore.QSize(220, 800))
        self.splitter_6.setMaximumSize(QtCore.QSize(600, 2412))
        self.splitter_6.setOrientation(QtCore.Qt.Vertical)
        self.splitter_6.setObjectName("splitter_6")
        self.splitter_5 = QtWidgets.QSplitter(self.splitter_6)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.splitter_5.sizePolicy().hasHeightForWidth())
        self.splitter_5.setSizePolicy(sizePolicy)
        self.splitter_5.setMinimumSize(QtCore.QSize(200, 480))
        self.splitter_5.setMaximumSize(QtCore.QSize(600, 1208))
        self.splitter_5.setOrientation(QtCore.Qt.Vertical)
        self.splitter_5.setObjectName("splitter_5")
        self.textBrowser = QtWidgets.QTextBrowser(self.splitter_5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.textBrowser.sizePolicy().hasHeightForWidth())
        self.textBrowser.setSizePolicy(sizePolicy)
        self.textBrowser.setMinimumSize(QtCore.QSize(200, 400))
        self.textBrowser.setMaximumSize(QtCore.QSize(600, 800))
        self.textBrowser.setObjectName("textBrowser")
        self.splitter_4 = QtWidgets.QSplitter(self.splitter_5)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.splitter_4.sizePolicy().hasHeightForWidth())
        self.splitter_4.setSizePolicy(sizePolicy)
        self.splitter_4.setMinimumSize(QtCore.QSize(200, 80))
        self.splitter_4.setMaximumSize(QtCore.QSize(604, 404))
        self.splitter_4.setOrientation(QtCore.Qt.Vertical)
        self.splitter_4.setObjectName("splitter_4")
        self.splitter_2 = QtWidgets.QSplitter(self.splitter_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.splitter_2.sizePolicy().hasHeightForWidth())
        self.splitter_2.setSizePolicy(sizePolicy)
        self.splitter_2.setMinimumSize(QtCore.QSize(200, 30))
        self.splitter_2.setMaximumSize(QtCore.QSize(604, 200))
        self.splitter_2.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_2.setObjectName("splitter_2")
        self.label = QtWidgets.QLabel(self.splitter_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setMinimumSize(QtCore.QSize(70, 30))
        self.label.setMaximumSize(QtCore.QSize(200, 200))
        font = QtGui.QFont()
        font.setFamily("苹方 粗体")
        font.setPointSize(10)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.textEdit = QtWidgets.QTextEdit(self.splitter_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.textEdit.sizePolicy().hasHeightForWidth())
        self.textEdit.setSizePolicy(sizePolicy)
        self.textEdit.setMinimumSize(QtCore.QSize(100, 30))
        self.textEdit.setMaximumSize(QtCore.QSize(400, 200))
        self.textEdit.setObjectName("textEdit")
        self.splitter_3 = QtWidgets.QSplitter(self.splitter_4)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.splitter_3.sizePolicy().hasHeightForWidth())
        self.splitter_3.setSizePolicy(sizePolicy)
        self.splitter_3.setMinimumSize(QtCore.QSize(200, 30))
        self.splitter_3.setMaximumSize(QtCore.QSize(604, 200))
        self.splitter_3.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_3.setObjectName("splitter_3")
        self.label_2 = QtWidgets.QLabel(self.splitter_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.label_2.sizePolicy().hasHeightForWidth())
        self.label_2.setSizePolicy(sizePolicy)
        self.label_2.setMinimumSize(QtCore.QSize(70, 30))
        self.label_2.setMaximumSize(QtCore.QSize(200, 200))
        font = QtGui.QFont()
        font.setFamily("苹方 粗体")
        font.setPointSize(10)
        self.label_2.setFont(font)
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.textEdit_2 = QtWidgets.QTextEdit(self.splitter_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.textEdit_2.sizePolicy().hasHeightForWidth())
        self.textEdit_2.setSizePolicy(sizePolicy)
        self.textEdit_2.setMinimumSize(QtCore.QSize(100, 30))
        self.textEdit_2.setMaximumSize(QtCore.QSize(400, 200))
        self.textEdit_2.setObjectName("textEdit_2")
        self.widget_4 = QtWidgets.QWidget(self.splitter_6)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(2)
        sizePolicy.setVerticalStretch(2)
        sizePolicy.setHeightForWidth(self.widget_4.sizePolicy().hasHeightForWidth())
        self.widget_4.setSizePolicy(sizePolicy)
        self.widget_4.setMinimumSize(QtCore.QSize(220, 320))
        self.widget_4.setMaximumSize(QtCore.QSize(1200, 1200))
        self.widget_4.setObjectName("widget_4")
        self.verticalLayout_2.addWidget(self.splitter_7)
        self.verticalLayout.addWidget(self.widget)
        self.setMinimumSize(QtCore.QSize(800, 800))

        #self.textshow()
        self.retranslateUi()
        QtCore.QMetaObject.connectSlotsByName(self)

        self.shortcut = QShortcut(QKeySequence('F5'),self.widget,self.openfile)
        self.shortcut = QShortcut(QKeySequence('Ctrl+F'),self.widget,self.fast_fourier_transform)
        self.ax.figure.canvas.mpl_connect("motion_notify_event", self)
        self.setMouseTracking(True)

    def __call__(self, event):
        if event.xdata !=None and event.ydata !=None:
            x_data = event.xdata
            y_data = event.ydata
            if self.layerdata.current_layer:

                for i in range(len(self.layerdata.return_current_layer_value().new_x)):
                    if x_data>=self.layerdata.return_current_layer_value().new_x[i] and x_data<self.layerdata.return_current_layer_value().new_x[i+1]:
                        x_index = i
                for i in range(len(self.layerdata.return_current_layer_value().new_y)):
                    if y_data>=self.layerdata.return_current_layer_value().new_y[i] and y_data<self.layerdata.return_current_layer_value().new_y[i+1]:
                        y_index = i
            else:
                x_index = 0
                y_index = 0
            font = QtGui.QFont()
            font.setFamily("苹方 粗体")
            font.setPointSize(14)
            self.textEdit.setFont(font)
            self.textEdit_2.setFont(font)
            self.textEdit.setText(str(x_index))
            self.textEdit_2.setText(str(y_index))


    """
    def topodraw(self,vmin=0,vmax=100):
        self.vmin =
    """
    def openfile(self):
        self.filename,_ = QFileDialog.getOpenFileName(self.widget,'openfile',self.layerdata.filepath,'binfile(*.bin)')
        self.folder_path = os.path.dirname(self.filename)
        Newbinpath,dirname = os.path.split(self.filename)
        topolayer = javabin.read_java_bin_single_layer(self.filename)
        showInfo = layers.layer_info(dirname, topolayer)
        self.layerdata.append_all(dirname,topolayer,showInfo)
        print(self.layerdata.return_current_info_value().Text)
        self.textshow(self.layerdata.return_current_info_value().Text)
        self.topomapdraw(self.layerdata.return_current_layer_value())

    def topomapdraw(self,layer_single:layers.singlelayer):
        index_x,index_y = np.meshgrid(layer_single.new_x,layer_single.new_y)
        #self.ax.pcolormesh(self.topolayer.data,cmap=plt.cm.RdBu)
        self.ax.clear()
        print(layer_single.new_x)
        self.ax.pcolormesh(index_x,index_y,layer_single.data,cmap=plt.cm.RdBu)
        self.canvas.draw()
        self.corsor = Cursor(self.ax,useblit=True,color='red',linewidth=1)
        self.ax.margins(0)

    def fast_fourier_transform(self):

        fft_layer,fft_logmag = Base_Function.fast_fourier_transform(self.layerdata.return_current_layer_value())
        self.topomapdraw(fft_logmag)
    """
    def contrast_ratio(self):
    """

    def textshow(self,showInfo):
        font = QtGui.QFont()
        font.setFamily("苹方 粗体")
        font.setPointSize(12)
        self.textBrowser.setFont(font)
        self.textBrowser.setText(showInfo)

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("Dialog", "Dialog"))
        self.label.setText(_translate("Dialog", "X_Position"))
        self.label_2.setText(_translate("Dialog", "Y_Position"))
    #def topomapdraw(self,cmaplist,):


class layer_info:
    def __init__(self,layername,layer:layers.singlelayer):
        self.layer = layer
        len_x = np.shape(self.layer.x)
        len_y = np.shape(self.layer.y)
        self.layername = layername
        x_length = self.layer.sizex
        y_length = self.layer.sizey
        self.x_ticket = unit_for_all(x_length,label ='length')
        self.y_ticket = unit_for_all(y_length,label ='length')
        self.layersize = 'Size'+'\t'+'('+'X'+':'+' '+str(round(self.x_ticket.x,1))+' '+self.x_ticket.units+';'+'Y'+':'+' '+str(round(self.y_ticket.x,1))+' '+self.y_ticket.units+')'+'\n'
        self.layerpixel= 'Pixel'+'\t'+'('+'X'+':'+' '+str(self.layer.nx)+' '+'Y'+':'+' '+str(self.layer.ny)+')'+'\n'
        self.Text= self.layername+'\n'+self.layersize+self.layerpixel

class unit_for_all:
    def __init__(self,x,label ='length'):
        self.label = label
        if self.label =='length':
            if x>=1:
                self.x = x
                self.units = 'm'
            elif x<1 and x>=10**-3:
                self.x = x*10**3
                self.units = 'mm'
            elif x< 10**-3 and x>=10**-6:
                self.x = x*10**-6
                self.units = '$\mu$m'
            elif x<10**-6 and x>=10**-9:
                self.x = x*10**9
                self.units = 'nm'
            elif x<10**-9 and x>10**-12:
                self.x = x**10**12
                self.units = 'fm'


class PlotCanvas(FigureCanvas):
    def __init__(self,parent=None,width=8,height=8,dpi=100):
        fig=Figure(figsize=(width,height),dpi=dpi)
        #self.axes = fig.add_subplot(111)
        FigureCanvas.__init__(self,fig)
        self.setParent(parent)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(2)
        sizePolicy.setVerticalStretch(2)
        sizePolicy.setHeightForWidth(True)
        FigureCanvas.setSizePolicy(self,sizePolicy)
        FigureCanvas.updateGeometry(self)
        self.setMinimumSize(QtCore.QSize(800, 800))
        self.setMaximumSize(QtCore.QSize(1800, 1800))
        """
        self.plot()
    def plot(self):
        self.ax = self.figure.add_subplot(111)

        self.ax.axis('on')

        self.draw()
        """
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_Dialog()
    ui.exec_()
    sys.exit(app.exec_())
